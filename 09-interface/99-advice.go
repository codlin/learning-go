package main

/*
一些建议

在设计一个新包时，新的Go程序员总是通过创建一个接口的集合开始和后面定义满足它们的具体类型。这种方式的结果就是有很多的接口，它们中的每一个仅只有一个实现。
不要再这么做了！
不要再这么做了！
不要再这么做了！
这种接口不是必要的抽象；它们也有一个运行时的损耗。
我们可以使用导出机制来限制一个类型的方法或一个结构体的字段是否包外可见。
接口只有在两个或两个以上的具体类型必须以相同的方式处理时才需要。

这个规则有一个例外，当一个接口满足一个单一的具体类型但由于其依赖关系，该类型不能与接口存在于同一个包中。
在这种情况下，接口是解耦两个包的好方法。

因为只有在满足两种或两种以上类型时才会在Go语言中使用接口，所以它们必须从任何特定实现的细节中抽象出来。结果是
使用更少、更简单的方法的更小的接口。当新的类型出现时，小接口更容易满足。
对于接口实现的一个好标准就是ask only for what you need（只考虑你需要的东西）
*/
